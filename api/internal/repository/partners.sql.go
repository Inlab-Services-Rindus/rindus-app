// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: partners.sql

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createPartner = `-- name: CreatePartner :one
INSERT INTO partners (
    name, logo_url, description, created_at, updated_at
) VALUES (
    $1, $2, $3, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
)
RETURNING id, name, logo_url, description, created_at, updated_at
`

type CreatePartnerParams struct {
	Name        string
	LogoUrl     string
	Description pgtype.Text
}

func (q *Queries) CreatePartner(ctx context.Context, arg CreatePartnerParams) (Partner, error) {
	row := q.db.QueryRow(ctx, createPartner, arg.Name, arg.LogoUrl, arg.Description)
	var i Partner
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.LogoUrl,
		&i.Description,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getPartnerByName = `-- name: GetPartnerByName :one
SELECT id, name, logo_url, description, created_at, updated_at
FROM partners
WHERE name = $1 LIMIT 1
`

func (q *Queries) GetPartnerByName(ctx context.Context, name string) (Partner, error) {
	row := q.db.QueryRow(ctx, getPartnerByName, name)
	var i Partner
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.LogoUrl,
		&i.Description,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
